{"version":3,"sources":["vaadin-combo-box.ts"],"names":[],"mappings":"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","file":"vaadin-combo-box.js","sourcesContent":["import {\n  Input,\n  Injector,\n  OnInit,\n  Directive,\n  ElementRef,\n  Output,\n  HostListener,\n  EventEmitter,\n  Provider,\n  forwardRef,\n  Renderer,\n  DoCheck,\n  IterableDiffers\n} from 'angular2/core';\nimport { NgControl, NG_VALUE_ACCESSOR, DefaultValueAccessor } from 'angular2/common';\nimport { CONST_EXPR } from 'angular2/src/facade/lang';\ndeclare var HTMLImports;\n\nconst VAADIN_COMBO_BOX_CONTROL_VALUE_ACCESSOR = CONST_EXPR(new Provider(\n    NG_VALUE_ACCESSOR, {\n      useExisting: forwardRef(() => VaadinComboBox),\n      multi: true\n    }));\n\n@Directive({\n  selector: 'vaadin-combo-box',\n  providers: [VAADIN_COMBO_BOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class VaadinComboBox extends DefaultValueAccessor implements OnInit, DoCheck {\n\n  @Input()\n  items: any[];\n\n  private _element;\n  private _control;\n  private _differ;\n  private _initialValueSet = false;\n\n  ngOnInit() {\n    this._control = this._injector.getOptional(NgControl);\n  }\n\n  ngDoCheck() {\n    const changes = this._differ.diff(this.items);\n    if (changes) {\n\n      // The items property must be set to a clone of the collection because of\n      // how iron-list behaves.\n      this._element.items = changes.collection.slice(0);\n    }\n  }\n\n  @Output() valueChange: EventEmitter<any> = new EventEmitter(false);\n  @HostListener('value-changed', ['$event.detail.value'])\n  valuechanged(value) {\n    this.valueChange.emit(value);\n\n    if (this._initialValueSet) {\n      // Do not trigger onChange when the initial (empty) value is set\n      // to keep the field as \"pristine\".\n      this.onChange(value);\n    } else {\n      this._initialValueSet = true;\n    }\n\n    // Pass the invalid state to our native vaadin-date-picker element if\n    // it is an ngControl.\n    if (this._control != null) {\n      this._element.invalid = !this._control.pristine && !this._control.valid;\n    }\n  }\n\n  importHref(href, onload) {\n    if (!document.querySelector('head link[href=\"' + href + '\"]')) {\n      const link = document.createElement('link');\n      link.rel = 'import';\n      link.href = href;\n      link.onload = onload;\n      document.head.appendChild(link);\n    } else {\n      onload();\n    }\n  }\n\n  onImport() {\n    this._element.$$('input').addEventListener('blur', () => {\n      this.onTouched();\n    });\n  }\n\n  constructor(renderer: Renderer, el: ElementRef,  private _injector: Injector, differs: IterableDiffers) {\n    super(renderer, el);\n    this._element = el.nativeElement;\n    this._differ = differs.find([]).create(null);\n\n    // In order to have iron-icons reliably available for vaadin-combo-box,\n    // we need to explicitly import it before importing the combo box.\n    this.importHref('bower_components/iron-icons/iron-icons.html', () => {\n      this.importHref('bower_components/vaadin-combo-box/vaadin-combo-box.html', this.onImport.bind(this));\n    });\n  }\n\n}\n"],"sourceRoot":"/source/"}